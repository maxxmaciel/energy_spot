import { Box, Button, Modal, TextField, Typography } from '@mui/material';
import React from 'react';
import { modalStyle } from '../ArquivoStyle';
import { CreateCampaignModalProps } from '../ArquivoTypes';
import CloseButton from './CloseButton';
import LinkingMachinesModal from './LinkingMachinesModal';
import useModals from './useModals';

const CreateCampaignModal: React.FC<CreateCampaignModalProps> = ({ open, onClose, onCreateCampaign }) => {
  const InstanceUseModals = useModals(onClose, onCreateCampaign);
  const {
    createCampaignState,
    setCreateCampaignState,
    handleCreateCampaign,
    handleConfirmClose,
    handleFileChange,
    linkingMachinesState,
    setLinkingMachinesState,
    styleGlobalModal
  } = InstanceUseModals;

  return (
    <>
      <Modal
        open={open}
        onClose={handleConfirmClose}
        aria-labelledby="modal-modal-title"
        aria-describedby="modal-modal-description"
        BackdropProps={{
          onClick: (e) => e.stopPropagation(), // Prevent closing on outside click
        }}

      >
        <Box sx={{ ...modalStyle, width: '600px', maxWidth: '80%' }} style={styleGlobalModal}>
          <Typography variant="h6" id="modal-modal-title">
            Criar Campanha
          </Typography>
          <Typography variant="subtitle1" style={{ marginTop: 20 }}>
            Vamos começar criando a sua campanha! Qual será o nome da campanha?
          </Typography>
          <TextField
            fullWidth
            label="Nome da Campanha"
            value={createCampaignState.campaignName}
            onChange={(e) => setCreateCampaignState(prev => ({ ...prev, campaignName: e.target.value }))}
            style={{ marginTop: 10 }}
            error={!!createCampaignState.errors.campaignName}
            helperText={createCampaignState.errors.campaignName || ' '}
          />
          <Typography variant="subtitle1" style={{ marginTop: 20 }}>
            Quem é o cliente desta campanha?
          </Typography>
          <TextField
            fullWidth
            label="Cliente"
            value={createCampaignState.cliente}
            onChange={(e) => setCreateCampaignState(prev => ({ ...prev, cliente: e.target.value }))}
            style={{ marginTop: 10 }}
            error={!!createCampaignState.errors.cliente}
            helperText={createCampaignState.errors.cliente || ' '}
          />
          <Typography variant="subtitle1" style={{ marginTop: 20 }}>
            Gostaria de adicionar uma descrição resumida?
          </Typography>
          <TextField
            fullWidth
            label="Descrição Resumida"
            value={createCampaignState.resumo}
            onChange={(e) => setCreateCampaignState(prev => ({ ...prev, resumo: e.target.value }))}
            style={{ marginTop: 10 }}
            error={!!createCampaignState.errors.resumo}
            helperText={createCampaignState.errors.resumo || ' '}
          />
          <Typography variant="subtitle1" style={{ marginTop: 20 }}>
            E uma descrição completa para maiores detalhes?
          </Typography>
          <TextField
            fullWidth
            label="Descrição Completa"
            value={createCampaignState.descricaoCompleta}
            onChange={(e) => setCreateCampaignState(prev => ({ ...prev, descricaoCompleta: e.target.value }))}
            multiline
            rows={4}
            style={{ marginTop: 10 }}
            error={!!createCampaignState.errors.descricaoCompleta}
            helperText={createCampaignState.errors.descricaoCompleta || ' '}
          />
          <Typography variant="subtitle1" style={{ marginTop: 20 }}>
            Gostaria de adicionar uma capa resumida? (Foto)
          </Typography>
          <Button
            variant="contained"
            component="label"
            style={{ marginTop: 10 }}
          >
            Upload Capa Resumida
            <input
              type="file"
              hidden
              onChange={(e) => handleFileChange(e, (file) => setCreateCampaignState(prev => ({ ...prev, capaResumida: file })))}
            />
          </Button>
          {createCampaignState.capaResumida && <Typography variant="body2" style={{ marginTop: 10 }}>{createCampaignState.capaResumida.name}</Typography>}
          <Typography variant="body2" color="error" style={{ marginTop: 10 }}>{createCampaignState.errors.capaResumida || ' '}</Typography>
          <Typography variant="subtitle1" style={{ marginTop: 20 }}>
            E uma capa completa? (Foto)
          </Typography>
          <Button
            variant="contained"
            component="label"
            style={{ marginTop: 10 }}
          >
            Upload Capa Completa
            <input
              type="file"
              hidden
              onChange={(e) => handleFileChange(e, (file) => setCreateCampaignState(prev => ({ ...prev, capaCompleta: file })))}
            />
          </Button>
          {createCampaignState.capaCompleta && <Typography variant="body2" style={{ marginTop: 10 }}>{createCampaignState.capaCompleta.name}</Typography>}
          <Typography variant="body2" color="error" style={{ marginTop: 10 }}>{createCampaignState.errors.capaCompleta || ' '}</Typography>
          <Button
            onClick={handleCreateCampaign}
            color="primary"
            variant="contained"
            style={{ marginTop: '20px', textAlign: 'left', display: 'block' }} // Align button to the left
          >
            Vamos para a Próxima Etapa
          </Button>
          <CloseButton InstanceUseModals={InstanceUseModals} />
        </Box>
      </Modal>

      <LinkingMachinesModal
        open={createCampaignState.openLinkingMachinesModal}
        onClose={() => setCreateCampaignState(prev => ({ ...prev, openLinkingMachinesModal: false }))}
        InstanceUseModals={InstanceUseModals}
      />
    </>
  );
};

export default CreateCampaignModal;
